   USE BattedBall;
GO
DELETE FROM CONSTANTS
GO 

USE BattedBall;
GO
DELETE FROM calculations
GO

USE BattedBall;
GO
DELETE FROM temp
GO

USE BattedBall;
GO 
DELETE FROM linearextrapolation
GO 

USE BattedBall;
GO 
DELETE FROM misc
GO 
	/*
	declare @h int;
	*/
	declare @x int;
	
	set @x = 1;
	/*
	set @h = 0;


set @h = (select max(constant_pk) from constants) +1
set @x = @h	 

*/
INSERT INTO CONSTANTS	
VALUES(
			@x,		/*constant_pk*/
    		5.125,  /*mass*/
    		9.125,	/*circumference*/
    		-1.0,	/*x01*/
    		55.0,	/*y01*/
    		6.0,	/*z01*/
    		95.0,	/*v01*/
    		-2.0,	/*theta*/
    		179,	/*phi*/
    		1500,	/*wb*/
    		1000,	/*ws*/
    		0,		/*wg*/
    		10000,	/*tau*/
    		0.001,	/*dt*/
    		75.0,	/*Temp (farenheit)*/
    		0.0,	/*elev (ft)*/
    		0.0,	/*vwind*/
    		0.0,	/*phiwind*/
    		50.0,	/*relative humidity*/
    		29.92,	/*barometric pressure (in Hg) */
    		0.0001217,	/*beta*/
    		0.330,		/*constant cd*/
    		2,			/*drag*/
    		2);			/*magnus*/
	SELECT * FROM constants;



	Insert Into calculations
	Values(@x,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
	

	
	declare @v0 decimal(18,4);
	Select @v0 = constants.v01 * 1.467
	from constants
	where constant_pk = @x;

	UPDATE calculations
	set v0 = @v0
	where calculations_pk = @x;

	
	declare @v0x decimal(18,4);
	Select @v0x = 1.467*constants.v01*COS(constants.theta*PI()/180)*SIN(constants.phi*PI()/180)
	from constants
	where constant_pk = @x;

	UPDATE calculations
	set v0x = @v0x
	where calculations_pk = @x;
	

	declare @v0y decimal(18,4);
	Select @v0y = 1.467*constants.v01*COS(constants.theta*PI()/180)*COS(constants.phi*PI()/180)
	from constants
	where constant_pk = @x;

	UPDATE calculations
	set v0y = @v0y
	where calculations_pk = @x;


	declare @v0z decimal(18,4);
	Select @v0z = 1.467*constants.v01*SIN(constants.theta*PI()/180)
	from constants
	where constant_pk = @x;

	UPDATE calculations
	set v0z= @v0z
	where calculations_pk = @x;

	
	declare @T2 decimal(18,4);
	Select @T2 = (5.0/9.0)*(constants.T1-32)
	from constants
	where constant_pk = @x;

	UPDATE calculations
	set T2= @T2
	where calculations_pk = @x;

	
	
	declare @elev2 decimal(18,4);
	Select @elev2 = constants.elev1/3.2808
	from constants
	where constant_pk = @x;

	UPDATE calculations
	set elev2= @elev2
	where calculations_pk = @x;


	declare @vxw decimal(18,4);
	Select @vxw = constants.vwind*1.467*SIN(constants.phiwind*PI()/180)
	from constants
	where constant_pk = @x;

	UPDATE calculations
	set vxw = @vxw
	where calculations_pk = @x;


	declare @vyw decimal(18,4);
	Select @vyw = constants.vwind*1.467*COS(constants.phiwind*PI()/180)
	from constants
	where constant_pk = @x;

	UPDATE calculations
	set vyw = @vyw
	where calculations_pk = @x;


	

	declare @barometric_pressure2 decimal(18,4);
	Select @barometric_pressure2 = barometric_pressure1*1000/39.37
	from constants
	where constant_pk = @x;

	UPDATE calculations
	set barometric_pressure2 = @barometric_pressure2
	where calculations_pk = @x;



	


	declare @relative_humidity decimal(18,4);
	Select @relative_humidity	= constants.relative_humidity
	from constants
	where constant_pk = @x;

	declare @beta decimal(18,4);
	Select @beta = constants.beta
	from constants
	where constant_pk = @x;

	declare @SVP decimal(18,4);
	Select @SVP = 4.5841*EXP((18.687-T2/234.5)*T2/(257.14+T2))
	from calculations
	where calculations_pk = @x;

	UPDATE calculations
	set SVP = @SVP
	where calculations_pk = @x;


	
	update 
		calculations
	set	
		rho2 = 1.2929*(273/(T2+273)*(barometric_pressure2*EXP(-beta*elev2)-0.3783*relative_humidity*SVP/100)/760)
	from
		constants, calculations
	where 
		calculations_pk = @x;


	update 
		calculations
	set	
		rho1 = rho2 *0.06261
	from
		constants, calculations
	where 
		calculations_pk = @x;

	update 
		calculations
	set	
		c0 = 0.07182*rho1*(5.125/constants.mass)*POWER((constants.circumference/9.125),2)
	from
		constants, calculations
	where 
		calculations_pk = @x;


	update 
		calculations
	set	
		const = c0,
		wx = (wb*COS(phi*PI()/180)-ws*SIN(theta*PI()/180)*SIN(phi*PI()/180)+wg*v0x/v0)*PI()/30,
		wy = (-wb*SIN(phi*PI()/180)-ws*SIN(theta*PI()/180)*COS(phi*PI()/180)+wg*v0y/v0)*PI()/30,
		wz = (ws*COS(theta*PI()/180)+wg*v0z/v0)*PI()/30
	from
		constants, calculations
	where 
		calculations_pk = @x;

	update 
		calculations
	set	
		omega =  SQRT(power(wx,2)+power(wy,2)+power(wz,2))
	from
		constants, calculations
	where 
		calculations_pk = @x;

	update						/*up to this point, fill calculations table*/
		calculations
	set	
		romega = ((constants.circumference/2)/PI())*omega/12,
		barometric_pressure2 = constants.barometric_pressure1*1000/39.37,
		re100 = rho2*44.7*(constants.circumference/(PI()*39.37))*(T2+273.16+120)/(0.000001512*Power(T2+273.16,1.5))
	from
		constants, calculations
	where 
		calculations_pk = @x;
	
	INSERT INTO ADAIR3
	VALUES(@x,null,null,null,null,null,null);
	
	
	update					/*fill adair table*/
		adair3   
	set
		cda = 0.5,
		cdb = -0.227,
		vel = 74.1*1.467*210000/calculations.Re100,
		vel_2 = vel/1.467,
		dv = 14.3*1.467*210000/calculations.Re100,
		dv_2 = dv/1.467
	from
		calculations, adair3
	where
		adair3_pk = @x;

	
declare @time_temp decimal(18,3);
declare @pk_temp decimal(18,3);
declare @x_temp decimal(18,3);
declare @y_temp decimal(18,3);
declare @z_temp decimal(18,3);
declare @r_temp decimal(18,3);
declare @vx_temp decimal(18,3);
declare @vy_temp decimal(18,3);
declare @vz_temp decimal(18,3);
declare @v_temp decimal(18,3);
declare @vw_temp decimal(18,3);
declare @cd_temp decimal(18,3);
declare @s_temp decimal(18,3);
declare @cl_temp decimal(18,3);
declare @adragx_temp decimal(18,3);
declare @adragy_temp decimal(18,3);
declare @adragz_temp decimal(18,3);
declare @w_temp decimal(18,3);
declare @amagx_temp decimal(18,3);
declare @amagy_temp decimal(18,3);
declare @amagz_temp decimal(18,3);
declare @ax_temp decimal(18,3);
declare @ay_temp decimal(18,3);
declare @az_temp decimal(18,3);
declare @flag_temp decimal(18,3);
declare @test1 int;
declare @test2 int;
declare @test3 int;
declare @test4 int;

set @pk_temp = 0;
set @time_temp= 0;

select @test1 = constants.drag
from constants
where constant_pk = @x;

select @test2 = constants.magnus
from constants
where constant_pk = @x;

if(@test1 = 1)	/*if statements for some calculations*/
	Begin
		select @cd_temp = (adair3.cda+adair3.cdb/(1+EXP(-(temp.vw-adair3.vel)/adair3.dv)))
		from adair3,temp
		where adair3_pk = @x;
	End
else if (@test1 = 2)
	begin
		select @cd_temp = constants.constantCD
		from constants
		where constant_pk = @x;
	end
else
	begin
		set @cd_temp = @pk_temp;
	end



insert into temp
values(@time_temp,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null)

update
	temp
set
	x = constants.x01,
	y = constants.y01,
	z = constants.z01
from 
	constants, calculations, temp
where 
	 t = @time_temp

update
	temp
set
	r = SQRT( power(x,2) + power(y,2)),
	vx = calculations.v0x,
	vy = calculations.v0y,
	vz = calculations.v0z
from 
	constants, calculations, temp
where 
	 t = @time_temp


update
	temp
set
	v = SQRT( power(vx,2)+power(vy,2) + power(vz,2)),
	vw = SQRT(power(vx-calculations.vxw,2) + power(vy-calculations.vyw,2)+power(vz,2)),
	cd = @cd_temp
from 
	constants, calculations, temp
where 
	 t = @time_temp


update
	temp
set
	s =  (calculations.romega/temp.vw)*EXP(-t/constants.tau)
from 
	constants, calculations, temp
where 
	 t = @time_temp
	


select @s_temp = temp.s
from temp
where t = @time_temp;

if(@test2 = 1)
	Begin
		if(@s_temp < 0.1)
			begin
				set @cl_temp = 1.5*@s_temp
			end
		else
			begin
				set @cl_temp = 0.09 + (0.6*@s_temp)
			end
	End
else if(@test2 = 2)
	begin
		set @cl_temp = 1/(2.32+ 0.4/@s_temp)
	end
else
	set @cl_temp = 0;



update
	temp
set
	cl = @cl_temp
	
from 
	constants, calculations, temp
where 
	 t = @time_temp	

update
	temp
set
	adragx = -const*cd*vw*(vx-vxw),
	adragy = -const*cd*vw*(vy-vyw),
	adragz = -1*calculations.const*Cd*vw*vz,
	w = omega*EXP((-1*@time_temp)/constants.tau)*30/PI(),
	amagx = calculations.const*(Cl/calculations.omega)*vw*(calculations.wy*vz-calculations.wz*(vy-calculations.vyw)),
	amagy = calculations.const*(Cl/calculations.omega)*vw*(calculations.wz*(vx-calculations.vxw)-calculations.wx*vz),
	amagz = calculations.const*(Cl/calculations.omega)*vw*(calculations.wx*(vy-calculations.vyw)-calculations.wy*(vx-calculations.vxw))
from 
	constants, calculations, temp
where 
	@time_temp = 0;

update
	temp
set
	ax = adragx + aMagx,
	ay = adragy + aMagy,
	az = adragz + aMagz -32.174
from 
	constants, calculations, temp
where 
	 t = @time_temp




select @test3 = temp.y
from temp
where t = @time_temp;

select @test4 = temp.y+temp.vy*constants.dt+0.5*temp.ay*constants.dt*constants.dt
from temp,constants
where t = @time_temp;

if( (@test3-17/12)*(@test4-17/12) < 0)
	begin
		update temp
		set flag = 1
		from temp
		where t = @time_temp
	end
else
	begin
		update temp					/*updating temp table (1st row of large table)*/
		set flag = 0
		from temp
		where t = @time_temp
	end
	select * from calculations
	select * from temp
	
select @x_temp = temp.x
from temp
where t = @time_temp

select @y_temp = temp.y
from temp
where t = @time_temp

select @z_temp = temp.z
from temp
where t = @time_temp

select @r_temp = temp.r
from temp
where t = @time_temp

select @vx_temp = temp.vx					/*storing temp first row to be used in next row*/
from temp
where t = @time_temp

select @vy_temp = temp.vy
from temp
where t = @time_temp

select @vz_temp = temp.vz
from temp
where t = @time_temp

select @v_temp = temp.v
from temp
where t = @time_temp

select @vw_temp = temp.vw
from temp
where t = @time_temp

select @cl_temp = temp.cl
from temp
where t = @time_temp

select @adragx_temp = temp.adragx
from temp
where t = @time_temp

select @adragy_temp = temp.adragy
from temp
where t = @time_temp

select @adragz_temp = temp.adragz
from temp
where t = @time_temp

select @w_temp = temp.w
from temp
where t = @time_temp

select @amagx_temp = temp.amagx
from temp
where t = @time_temp

select @amagy_temp = temp.amagy
from temp
where t = @time_temp

select @amagz_temp = temp.amagz
from temp
where t = @time_temp

select @ax_temp = temp.ax
from temp
where t = @time_temp

select @ay_temp = temp.ay
from temp
where t = @time_temp

select @az_temp = temp.az
from temp
where t = @time_temp

select @flag_temp = temp.flag
from temp
where t = @time_temp












set @time_temp = .001



declare @counter decimal(18,4);
declare @test9 decimal(18,4);
declare @test8 decimal(18,4);
while(@time_temp < 1.2)
begin
	select @test1 = constants.drag
	from constants
	where constant_pk = @x;

	select @test2 = constants.magnus
	from constants
	where constant_pk = @x;									/*copy and paste of first row for rest of numbers with updated calculations*/

	if(@test1 = 1)
		Begin
			select @cd_temp = (adair3.cda+adair3.cdb/(1+EXP(-(temp.vw-adair3.vel)/adair3.dv)))
			from adair3,temp	
			where adair3_pk = @x;
		End
	else if (@test1 = 2)
		begin
			select @cd_temp = constants.constantCD
			from constants
			where constant_pk = @x;
		end
	else
		begin
			set @cd_temp = @pk_temp;
		end



	insert into temp
	values(@time_temp,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null)
		
	update
		temp
	set
		x = @x_temp+@vx_temp*dt+0.5*@ax_temp*dt*dt,
		y = @y_temp+@vy_temp*dt+0.5*@ay_temp*dt*dt,
		z = @z_temp+@vz_temp*dt+0.5*@az_temp*dt*dt
	from 
		constants, calculations, temp
	where 
		 t = @time_temp

	update
		temp
	set
		r = SQRT( power(x,2) + power(y,2) ),
		vx = @vx_temp+@ax_temp*dt,
		vy = @vy_temp+@ay_temp*dt,
		vz = @vz_temp+@az_temp*dt
	from 
		constants, calculations, temp
	where 
		 t = @time_temp


	update
		temp
	set
		v = SQRT( power(vx,2)+power(vy,2) + power(vz,2)),
		vw = SQRT(power(vx-calculations.vxw,2) + power(vy-calculations.vyw,2)+power(vz,2)),
		cd = @cd_temp
	from 
		constants, calculations, temp
	where 
		 t = @time_temp


	update
		temp
	set
		s =  (calculations.romega/temp.vw)*EXP(-t/constants.tau)
	from 
		constants, calculations, temp
	where 
		 t = @time_temp
	


	select @s_temp = temp.s
	from temp
	where t = @time_temp;

	if(@test2 = 1)
		Begin
			if(@s_temp < 0.1)
				begin
					set @cl_temp = 1.5*@s_temp
				end
			else
				begin
					set @cl_temp = 0.09 + (0.6*@s_temp)
				end
		End
	else if(@test2 = 2)
		begin
			set @cl_temp = 1/(2.32+ 0.4/@s_temp)
		end
	else
		set @cl_temp = 0;



	update
		temp
	set
		cl = @cl_temp
	
	from 
		constants, calculations, temp
	where 
		 t = @time_temp	

	update
		temp
	set
		adragx = -const*cd*vw*(vx-vxw),
		adragy = -const*cd*vw*(vy-vyw),
		adragz = -1*calculations.const*Cd*vw*vz,
		w = omega*EXP((-1*@time_temp)/constants.tau)*30/PI(),
		amagx = calculations.const*(Cl/calculations.omega)*vw*(calculations.wy*vz-calculations.wz*(vy-calculations.vyw)),
		amagy = calculations.const*(Cl/calculations.omega)*vw*(calculations.wz*(vx-calculations.vxw)-calculations.wx*vz),
		amagz = calculations.const*(Cl/calculations.omega)*vw*(calculations.wx*(vy-calculations.vyw)-calculations.wy*(vx-calculations.vxw))
	from 
		constants, calculations, temp
	where 
		 t = @time_temp

	update
		temp
	set
		ax = adragx + aMagx,
		ay = adragy + aMagy,
		az = adragz + aMagz -32.174
	from 
		constants, calculations, temp
	where 
		 t = @time_temp




	select @test3 = temp.y
	from temp
	where t = @time_temp;

	select @test4 = temp.y+temp.vy*constants.dt+0.5*temp.ay*constants.dt*constants.dt
	from temp,constants
	where t = @time_temp;
	
	select @test8 = temp.z
	from temp 
	where t = @time_temp-0.001

	select @test9 = temp.z
	from temp 
	where t = @time_temp

	if(@test8 > 0 and @test9 <= 0)
	begin
		update temp
		set flag = 1
		from temp
		where t = @time_temp
	end


	select @x_temp = temp.x
	from temp
	where t = @time_temp

	select @y_temp = temp.y
	from temp
	where t = @time_temp

	select @z_temp = temp.z
	from temp
	where t = @time_temp

	select @r_temp = temp.r
	from temp
	where t = @time_temp

	select @vx_temp = temp.vx
	from temp
	where t = @time_temp

	select @vy_temp = temp.vy
	from temp
	where t = @time_temp

	select @vz_temp = temp.vz
	from temp
	where t = @time_temp

	select @v_temp = temp.v
	from temp
	where t = @time_temp

	select @vw_temp = temp.vw
	from temp
	where t = @time_temp

	select @cl_temp = temp.cl
	from temp
	where t = @time_temp

	select @adragx_temp = temp.adragx
	from temp
	where t = @time_temp

	select @adragy_temp = temp.adragy
	from temp
	where t = @time_temp

	select @adragz_temp = temp.adragz
	from temp
	where t = @time_temp

	select @w_temp = temp.w
	from temp
	where t = @time_temp

	select @amagx_temp = temp.amagx
	from temp
	where t = @time_temp

	select @amagy_temp = temp.amagy
	from temp
	where t = @time_temp

	select @amagz_temp = temp.amagz
	from temp
	where t = @time_temp

	select @ax_temp = temp.ax
	from temp
	where t = @time_temp

	select @ay_temp = temp.ay
	from temp
	where t = @time_temp

	select @az_temp = temp.az
	from temp
	where t = @time_temp

	select @flag_temp = temp.flag
	from temp
	where t = @time_temp
	
	
	if(@flag_temp = 1)
		set @counter = @time_temp * 1000

	set @time_temp += .001



end	




insert into LINEAREXTRAPOLATION
Values(@x,null,null,null,null,null,null);

update 
	LINEAREXTRAPOLATION						
set 
	x1 = x01,
	z1 = z01,
	y1 = y01,
	y2 = 0
from
	constants
where 
	linearextrapolation_pk = @x;

update 
	LINEAREXTRAPOLATION
set 
	x2 = x1 +(v0x/v0y)*(y2-y1),
	z2 = z1+(calculations.v0z/calculations.v0y)*(linearextrapolation.y2-linearextrapolation.y1)
from
	constants, calculations, LINEAREXTRAPOLATION
where
	linearextrapolation_pk = @x;


insert into misc
values(@x, null,null,null,null,null,null,null,null,null,null,null);

update
	misc
set
	tFlag = @counter + 31,
	tFlag2 = @counter + 32

update
	misc
set
	tX = temp.x,
	tY = temp.y,
	tZ = temp.z
from
	temp
where
	t = tFlag


update
	misc
set
	tX2 = temp.x,
	tY2 = temp.y,
	tZ2 = temp.z
from
	temp
where
	t = tFlag2

update
	misc
set
	tZ3 = tZ2/(tZ2-tZ)
from
	temp
where
	t = tFlag2

update
	misc
set
	hang1 = t
from
	temp
where
	t = tFlag

update
	misc
set
	hang2 = t
from
	temp
where
	t = tFlag2



insert into HOMEPLATECROSSING
Values(@x,null,null,null,null);


update
	HOMEPLATECROSSING
set
	xf = tX2+tZ3*(tX2-tX),
	yf =tY2-tZ3*(tY2-tY),
	zf = tZ2-tZ3*(tZ2-tZ),
	hangtime = hang2-hang1*(hang2-tZ3)
from
	misc
where
	misccalculations_pk = @x

select * from misc
select * from temp

insert into summary
values (@x,null,null,null,null,null,null,null,null);

update
	summary
set
	v0_ = v01,
	x0_ = x01,
	z0_ = z01,
	px_ = xf,
	pz_ = zf
from 
	constants, HOMEPLATECROSSING
where
	summary_pk = @x

update
	summary
set
	xMvmt = 12*(px_-(x01+(v0x/v0y)*(17/12-y01))),
	yMvmt = 12*(pz_-(z01+(v0z/v0y)*(17/12-y01)))
from
	calculations, summary, constants
where
	summary_pk = @x


CREATE DATABASE PITCHEDBALL


USE [BATTEDBALL]
GO
CREATE TABLE CONSTANTS
    (
      constant_pk int,
      mass decimal(18,4),
      circumference decimal(18,4),
      x01 decimal(18,4),
      y01 decimal(18,4),
      z01 decimal(18,4),
      v01 decimal(18,4),
      theta decimal(18,4),
      phi decimal(18,4),
      wb decimal(18,4),
      ws decimal(18,4),
      wg decimal(18,4),
      tau decimal(18,4),
      dt decimal(18,4),
      T1 decimal(18,4),
      elev1 decimal(18,4),
      vwind decimal(18,4),
      phiwind decimal(18,4),
      relative_humidity decimal(18,4),
      barometric_pressure1 decimal(18,4),
      beta decimal(18,4),
      constantCD decimal(18,4),
      drag int,
      magnus int
   )




USE [BATTEDBALL]
GO
CREATE TABLE CALCULATIONS
    (
      calculations_pk int,
      rho1 decimal(18,4),
      rho2 decimal(18,4),
      const decimal(18,4) ,
      c0 decimal(18,4),
      v0 decimal(18,4),
      v0x decimal(18,4),
      v0y decimal(18,4),
      v0z decimal(18,4),
      wx decimal(18,4),
      wy decimal(18,4),
      wz decimal(18,4),
      omega decimal(18,4),
      romega decimal(18,4),
      T2 decimal(18,4),
      elev2 decimal(18,4),
      vxw decimal(18,4),
      vyw decimal(18,4),
      SVP decimal(18,4),
      barometric_pressure2 decimal(18,4),
      re100 decimal(18,4)
    )

USE [BATTEDBALL]
GO
CREATE TABLE ADAIR3
    (
      adair3_pk int,
      cda decimal(18,4),
      cdb decimal(18,4),
      vel decimal(18,4),
      vel_2 decimal(18,4),
      dv decimal(18,4),
      dv_2 decimal(18,4)
    )
   

USE [BATTEDBALL]
GO
CREATE TABLE temp
(
    t decimal(18,4),
    x decimal(18,4),
    y decimal(18,4),
    z decimal(18,4),
    r decimal(18,4),
    vx decimal(18,4),
    vy decimal(18,4),
    vz decimal(18,4),
    v decimal(18,4),
    vw decimal(18,4),
    cd decimal(18,4),
    s decimal(18,4),
    cl decimal(18,4),
    adragx decimal(18,4),
    adragy decimal(18,4),
    adragz decimal(18,4),
    w decimal(18,4),
    aMagx decimal(18,4),
    aMagy decimal(18,4),
    aMagz decimal(18,4),
    ax decimal(18,4),
    ay decimal(18,4),
    az decimal(18,4),
    flag int
)

USE [BATTEDBALL]
GO
CREATE TABLE HOMEPLATECROSSING
(
    homeplatecrossing_pk int;
    xf decimal(18,4);
    yf decimal(18,4);
    zf decimal(18,4);
    hangtime decimal(18,4);
    vf decimal(18,4);
)

CREATE TABLE MISCCALCULATIONS
(
    misccalculations_pk int;
    tFlag decimal(18,4);
    tFlag2 decimal(18,4);
    tX decimal(18,4);
    tX2 decimal(18,4);
    tY decimal(18,4);
    tY2 decimal(18,4);
    tZ decimal(18,4);
    tZ2 decimal(18,4);
    tZ3 decimal(18,4);
    hang1 decimal(18,4);
    hang2 decimal(18,4);
)

	
